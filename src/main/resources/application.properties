app.ambiente=${app.ambiente}
br.com.psainfo.mimir.client.GestorWsAuthenticationClient/mp-rest/url=${wsgestor.url}

%dev.GSON_DATE_FORMAT_DESERIALIZE=MMM d, yyyy, H:mm:ss a
%int.GSON_DATE_FORMAT_DESERIALIZE=MMM d, yyyy H:mm:ss a
%prod.GSON_DATE_FORMAT_DESERIALIZE=MMM d, yyyy H:mm:ss a

mp.openapi.filter=br.com.psainfo.mimir.core.filter.OpenApiOASFilter
quarkus.swagger-ui.always-include=true

quarkus.log.level=${quarkus.log.level}
quarkus.log.category."org.springframework.jdbc".level=${springframework.jdbc.log.level}
quarkus.log.console.color=true
quarkus.log.console.enable=${quarkus.log.console.enable}
quarkus.log.console.level=${quarkus.log.console.level}
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c:%L] (%t) %s%e%n
quarkus.log.file.enable=${quarkus.log.file.enable}
quarkus.log.file.path=${quarkus.log.file.path}
quarkus.log.file.level=${quarkus.log.file.level}
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c:%L] (%t) %s%e%n

quarkus.flyway.migrate-at-start=true
quarkus.hibernate-orm.database.generation=${hibernate-orm.database.generation}
quarkus.hibernate-orm.jdbc.timezone=America/Sao_Paulo
quarkus.hibernate-orm.dialect=org.hibernate.dialect.MySQL8Dialect
quarkus.hibernate-orm.log.sql=${hibernate-orm.log.sql}
quarkus.hibernate-orm.log.jdbc-warnings=${hibernate-orm.log.jdbc-warnings}

# Datasource Default Mimir
quarkus.datasource.driver=com.mysql.cj.jdbc.Driver
quarkus.datasource.min-size=2
datasource.connection.properties=pinGlobalTxToPhysicalConnection=true&autoReconnect=true&useSSL=false&characterEncoding=UTF-8&useTimezone=true&serverTimezone=America/Sao_Paulo&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true

#DB DEV
%dev.quarkus.datasource.url=jdbc:mysql://localhost:3306/mimir?${datasource.connection.properties}
%dev.quarkus.datasource.username=root
%dev.quarkus.datasource.password=mysql
%dev.quarkus.datasource.max-size=5

# CORS
#
# Enable the CORS filter.
#
quarkus.http.cors=true

# HTTP headers exposed in CORS
#
# Comma separated list of valid headers. ex: X-Custom,Content-Disposition
#
# default: <empty>
#
quarkus.http.cors.exposed-headers=Content-Disposition,Authorization,systemMessage,Access-Control-Allow-Origin

# HTTP headers allowed for CORS
#
# Comma separated list of valid headers. ex: X-Custom,Content-Disposition
# The filter allows any header if this is not set.
#
# default: returns any requested header as valid
#
quarkus.http.cors.headers=content-type,accept,authorization,Access-Control-Allow-Origin

# HTTP methods allowed for CORS
#
# Comma separated list of valid methods. ex: GET,PUT,POST
# The filter allows any method if this is not set.
#
# default: returns any requested method as valid
#
quarkus.http.cors.methods=GET,PUT,POST,OPTIONS

# Origins allowed for CORS
#
# Comma separated list of valid URLs. ex: http://www.quarkus.io,http://localhost:3000
# The filter allows any origin if this is not set.
#
# default: returns any requested origin as valid
#
%dev.quarkus.http.cors.origins=http://localhost:3000
quarkus.http.cors.access-control-max-age=24H