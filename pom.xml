<?xml version="1.0" ?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>br.com.psainfo</groupId>
    <artifactId>mimir</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <properties>
        <quarkus.version>1.3.4.Final</quarkus.version>
        <LibSVM.version>1.0.10</LibSVM.version>
        <SMOTE.version>1.0.3</SMOTE.version>
        <aws-java-sdk.version>1.11.673</aws-java-sdk.version>
        <bestFirstTree.version>1.0.4</bestFirstTree.version>
        <bestrees.version>1.0.0</bestrees.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <docker-maven-plugin.version>1.2.2</docker-maven-plugin.version>
        <ensembleLibrary.version>1.0.4</ensembleLibrary.version>
        <flyway-maven-plugin.version>6.0.8</flyway-maven-plugin.version>
        <fmk-common.version>1.5.72</fmk-common.version>
        <frontend-maven-plugin.version>1.8.0</frontend-maven-plugin.version>
        <guava.version>28.1-jre</guava.version>
        <hibernate-types-5.version>1.2.0</hibernate-types-5.version>
        <jandex-maven-plugin.version>1.0.5</jandex-maven-plugin.version>
        <javac.version>1.8.0-u20</javac.version>
        <jaxws-api.version>2.3.1</jaxws-api.version>
        <jersey-common.version>2.29.1</jersey-common.version>
        <jjwt.version>0.9.1</jjwt.version>
        <lombok.version>1.18.10</lombok.version>
        <maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <mockito-core.version>3.0.0</mockito-core.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.version>4.3.24.RELEASE</spring.version>
        <springjdbc-iterable.version>1.0.3</springjdbc-iterable.version>
        <thresholdSelector.version>1.0.3</thresholdSelector.version>
        <version.mysql>8.0.18</version.mysql>
        <weka-stable.version>3.8.3</weka-stable.version>
        <gson.version>2.8.6</gson.version>
        <smallrye-reactive-messaging-amqp.version>1.0.8</smallrye-reactive-messaging-amqp.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${quarkus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-jsonb</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-scheduler</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-flyway</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-openapi</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-orm-panache</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-mariadb</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${version.mysql}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-swagger-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-vertx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>javac</artifactId>
            <version>${javac.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>${jersey-common.version}</version>
        </dependency>
        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>weka-stable</artifactId>
            <version>${weka-stable.version}</version>
        </dependency>
        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>LibSVM</artifactId>
            <version>${LibSVM.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>weka-dev</artifactId>
                    <groupId>nz.ac.waikato.cms.weka</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alexkasko.springjdbc</groupId>
            <artifactId>springjdbc-iterable</artifactId>
            <version>${springjdbc-iterable.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>thresholdSelector</artifactId>
            <version>${thresholdSelector.version}</version>
        </dependency>
        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>bestFirstTree</artifactId>
            <version>${bestFirstTree.version}</version>
        </dependency>
        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>ensembleLibrary</artifactId>
            <version>${ensembleLibrary.version}</version>
        </dependency>
        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>bestrees</artifactId>
            <version>${bestrees.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-core</artifactId>
            <version>${aws-java-sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>${aws-java-sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vladmihalcea</groupId>
            <artifactId>hibernate-types-5</artifactId>
            <version>${hibernate-types-5.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons-beanutils.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.ws</groupId>
            <artifactId>jaxws-api</artifactId>
            <version>${jaxws-api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>${frontend-maven-plugin.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>cdi-api</artifactId>
                    <groupId>javax.enterprise</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
        </dependency>
        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>SMOTE</artifactId>
            <version>${SMOTE.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-undertow</artifactId>
            <version>${quarkus.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>
        </dependency>

        <dependency>
            <groupId>io.smallrye.reactive</groupId>
            <artifactId>smallrye-reactive-messaging-amqp</artifactId>
            <version>${smallrye-reactive-messaging-amqp.version}</version>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20190722</version>
        </dependency>

    </dependencies>
    <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/application.properties</include>
                </includes>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.arff</include>
                    <include>**/*.model</include>
                </includes>
            </resource>
        </resources>
        <filters>
            <filter>${basedir}/src/main/filters/${filter.name}.properties</filter>
        </filters>


        <plugins>

            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <uberJar>false</uberJar>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <configuration>
                    <argLine>-Xmx1024m</argLine>
                    <argLine>-Xms1024m</argLine>
                    <systemProperties>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    </systemProperties>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <version>${jandex-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>make-index</id>
                        <goals>
                            <goal>jandex</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway-maven-plugin.version}</version>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>desenvolvimento</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <filter.name>desenvolvimento</filter.name>
            </properties>
        </profile>
        <profile>
            <id>integracao</id>
            <properties>
                <filter.name>integracao</filter.name>
            </properties>
        </profile>
        <profile>
            <id>producao</id>
            <properties>
                <filter.name>producao</filter.name>
            </properties>
        </profile>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <version>${quarkus.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>native-image</goal>
                                </goals>
                                <configuration>
                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemProperties>
                                        <native.image.path>
                                            ${project.build.directory}/${project.build.finalName}-runner
                                        </native.image.path>
                                    </systemProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>buildui</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>${frontend-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v12.13.0</nodeVersion>
                                    <npmVersion>6.12.0</npmVersion>
                                    <nodeDownloadRoot>https://nodejs.org/dist/</nodeDownloadRoot>
                                    <npmDownloadRoot>http://registry.npmjs.org/npm/-/</npmDownloadRoot>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm set registry</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>config set registry https://registry.npmjs.org</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm set non-strict ssl</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>config set strict-ssl false</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm install</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm run build</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>run build</arguments>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <workingDirectory>../mimir-ui/</workingDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-api-producao</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>

                        <executions>

                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>tag-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>tag</goal>
                                </goals>

                                <configuration>
                                    <image>psainfo/mimir-api:${project.version}</image>
                                    <newName>957683250823.dkr.ecr.sa-east-1.amazonaws.com/psainfo/mimir-api:producao
                                    </newName>
                                    <pushImage>true</pushImage>
                                </configuration>

                            </execution>
                        </executions>

                        <configuration>
                            <skipDocker>false</skipDocker>

                            <imageName>psainfo/mimir-api</imageName>

                            <imageTags>
                                <imageTag>${project.version}</imageTag>
                                <imageTag>latest</imageTag>
                            </imageTags>

                            <dockerDirectory>${basedir}/src/main/docker</dockerDirectory>

                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>lib/*.jar</include>
                                    <include>${project.build.finalName}-runner.jar</include>
                                </resource>
                            </resources>
                        </configuration>


                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-ui-producao</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>${frontend-maven-plugin.version}</version>

                        <executions>
                            <execution>
                                <id>install node and yarn</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>install-node-and-yarn</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v12.13.0</nodeVersion>
                                    <yarnVersion>v1.19.1</yarnVersion>
                                </configuration>
                            </execution>
                            <execution>
                                <id>yarn sc-cleanup</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <arguments>sc-cleanup</arguments>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <workingDirectory>../mimir-ui/</workingDirectory>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>

                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>

                        <configuration>
                            <skipDocker>false</skipDocker>

                            <imageTags>
                                <imageTag>${project.version}</imageTag>
                                <imageTag>latest</imageTag>
                            </imageTags>

                            <pushImage>true</pushImage>

                            <imageName>957683250823.dkr.ecr.sa-east-1.amazonaws.com/psainfo/mimir-ui:producao
                            </imageName>

                            <dockerDirectory>../mimir-ui</dockerDirectory>

                            <buildArgs>
                                <apiBaseUrl>https://mimir.psainfo.com.br/api</apiBaseUrl>
                                <nodeEnv>production</nodeEnv>
                            </buildArgs>

                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>